using System;
using System.Collections.Generic;
using System.ComponentModel.Design;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Proyecto;

class Paciente
{
    public int numero_unico;
    public int identificacion;
    public string nombre;
    public string apellido_1;
    public string apellido_2;
    public string fecha_de_nacimiento;
    private string eps;
    public string historia_clínica;
    public int cantidad_Enfermedades;
    private string enfermedad_relevante;
    public string afiliacion;
    public int costo_Tratamiento;
    public int tiempo_en_eps;

    //public string Eps { get => eps; set => eps = value; }
    public string Eps
    {
        get { return eps; }
        set { eps = value; }
    }
    public string Enfermedad_relevante { get => enfermedad_relevante; set => enfermedad_relevante = value; }

    public Paciente(int identificacion, string nombre, string apellido_1, string apellido_2, string fecha_de_nacimiento)
    {
        this.identificacion = identificacion;
        this.nombre = nombre;
        this.apellido_1 = apellido_1;
        this.apellido_2 = apellido_2;
        this.fecha_de_nacimiento = fecha_de_nacimiento;
        this.Eps = "";
        this.historia_clínica = "";
        this.cantidad_Enfermedades = 0;
        this.Enfermedad_relevante = "";
        this.afiliacion = "";
        this.costo_Tratamiento = 0;
        this.tiempo_en_eps = 0;
        this.numero_unico ++;
    }

    public static Paciente Generar_paciente(List<Paciente> lista_pacientes)
    {
        Console.WriteLine("-------------------------------------------------");
        Console.Write("Ingrese su identificación    ==> ");
        int id = Convert.ToInt32(Console.ReadLine().Trim());

        Console.Write("Ingrese su nombre            ==> ");
        string nombre = Console.ReadLine().Trim();

        Console.Write("Ingrese su primer apellido   ==> ");
        string apellido_1 = Console.ReadLine().Trim();

        Console.Write("Ingrese su segundo apellido  ==> ");
        string apellido_2 = Console.ReadLine().Trim();

        Console.Write("Ingrese su año de nacimiento ==> ");
        int año = Convert.ToInt32(Console.ReadLine().Trim());

        Console.Write("Ingrese su mes de nacimiento ==> ");
        int mes = Convert.ToInt32(Console.ReadLine().Trim());

        Console.Write("Ingrese su dia de nacimiento ==> ");
        int dia = Convert.ToInt32(Console.ReadLine().Trim());

        DateTime fecha_nacimiento = new DateTime(año, mes, dia);

        Paciente P_x = new Paciente(id, nombre, apellido_1, apellido_2, fecha_nacimiento.ToShortDateString());
        lista_pacientes.Add(P_x);
        return P_x;
    }
    public void Ingresar_info_clinica()
    {
        int opcion;

        Console.WriteLine("------------------------------------------------------");
        Console.Write("Ingrese su EPS actual \n" +
                "0) Sura\n" +
                "1) Nueva EPS\n" +
                "2) Salud Total\n" +
                "3) Sanitas\n" +
                "4) Savia\n => ");

        opcion = Convert.ToInt32(Console.ReadLine());

        if (opcion == 0){this.Eps = "Sura";}
        else if (opcion == 1){this.Eps = "Nueva EPS";}
        else if (opcion == 2){this.Eps = "Salud Total";}
        else if (opcion == 3){this.Eps = "Sanitas";}
        else if (opcion == 4){this.Eps = "Savia";}
        else if (opcion > 4) {Console.WriteLine("Opción no válida!!");}
        

        Console.Write("Cuantos lleva con su EPS actual? (meses)      => ");
        this.tiempo_en_eps = Convert.ToInt32(Console.ReadLine().Trim());

        Console.WriteLine("Ingrese su historia clinica               => ");
        this.historia_clínica = Console.ReadLine();

        Console.Write("Ingrese su cantidad total de enfermedades => ");
        this.cantidad_Enfermedades = Convert.ToInt32(Console.ReadLine().Trim());

        Console.Write("Ingrese su enfermedad mas grave           => ");
        this.Enfermedad_relevante = Console.ReadLine().Trim();

        Console.WriteLine("Tipo de afiliacion\n" +
            "0) Cotizante\n" +
            "1) Beneficiario");
        Console.Write("==> ");
        opcion = Convert.ToInt32(Console.ReadLine());
        if  (opcion == 0 ) {this.afiliacion = "Cotizante"; }

        else if(opcion==1) {this.afiliacion="Beneficiario";}

        Console.Write("Ingrese el costo de su tratamiento ==> ");
        this.costo_Tratamiento = Convert.ToInt32(Console.ReadLine().Trim());
   
    }
    public void Cambiar_eps()
    {
        Console.WriteLine("----------------------------------------------------------------");
        if(this.tiempo_en_eps >= 3)
        {
            Console.WriteLine("Cordial saludo " + this.nombre +"\n");
            Console.WriteLine("" +
                "0) Sura\n" +
                "1) Nueva EPS\n" +
                "2) Salud Total\n" +
                "3) Sanitas\n" +
                "4) Savia\n");
            Console.Write("Ingrese la eps a la que se desea cambiar ==> ");

            int proxima_eps = Convert.ToInt32(Console.ReadLine());
            if (proxima_eps == 0 )
            {
                this.Eps = "Sura";
            }
            else if(proxima_eps == 1 )
            {
                this.Eps = "Nueva EPS";
            }
            else if(proxima_eps == 2 )
            {
                this.Eps = "Salud Total";
            }
            else if(proxima_eps == 3 )
            {
                this.Eps = "Sanitas";
            }
            else if(proxima_eps == 4 )
            {
                this.Eps = "Savia";
            }
            else if (proxima_eps > 4)
            {
                Console.WriteLine("Opción no válida!!\n");
            }
        }
        else
        {
            Console.WriteLine("Para cambiar de EPS debe llevar mas de tres meses en su EPS actual.");
        }
   
    }

    public static List<double> Porcentaje_costos(List<Paciente> Lista_de_pacientes)
    {
        List<int> Costos_Sura       = new List<int>();
        List<int> Costos_NuevaEPS   = new List<int>();
        List<int> Costos_SaludTotal = new List<int>();
        List<int> Costos_Sanitas    = new List<int>();
        List<int> Costos_Savia      = new List<int>();
        List<double> lista_promedios = new List<double>();

        double promedio_Sura = 0;
        double promedio_NuevaEPS = 0;
        double promedio_SaludTotal = 0;
        double promedio_Sanitas = 0;
        double promedio_Savia = 0;

        foreach (Paciente paciente in Lista_de_pacientes)
        {
            if (paciente.Eps == "Sura")             { Costos_Sura.Add(paciente.costo_Tratamiento); }
            else if (paciente.Eps == "Nueva EPS")   { Costos_NuevaEPS.Add(paciente.costo_Tratamiento);}
            else if (paciente.Eps == "Salud Total") { Costos_SaludTotal.Add(paciente.costo_Tratamiento); }
            else if (paciente.Eps == "Sanitas")     { Costos_Sanitas.Add(paciente.costo_Tratamiento); }
            else if (paciente.Eps == "Savia")       { Costos_Savia.Add(paciente.costo_Tratamiento); }

        }
        promedio_Sura       = Calcular_promedio(Costos_Sura);
        promedio_NuevaEPS   = Calcular_promedio(Costos_NuevaEPS);
        promedio_SaludTotal = Calcular_promedio(Costos_SaludTotal);
        promedio_Sanitas    = Calcular_promedio(Costos_Sanitas);
        promedio_Savia      = Calcular_promedio(Costos_Savia);

        lista_promedios.Add(promedio_Sura);
        lista_promedios.Add(promedio_NuevaEPS);
        lista_promedios.Add(promedio_SaludTotal);
        lista_promedios.Add(promedio_Sanitas);
        lista_promedios.Add(promedio_Savia);
        return lista_promedios;
    }

    private static double Calcular_promedio(List<int> lista_costos)
    {
        double total = 0;
        for (int i = 0; i < lista_costos.Count(); i++)
        {
            total+= lista_costos[i];
        }
        if (lista_costos.Count() > 0) { return total / lista_costos.Count(); }
        else { return 0; }
        

    }
}
